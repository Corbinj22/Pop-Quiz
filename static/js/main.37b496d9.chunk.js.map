{"version":3,"sources":["apiRequestFake.js","Components/WelcomePage/Welcome.js","Components/ScoreBox/ScoreBox.js","Components/QuestionBox/QuestionBox.js","Components/GameView/GameView.js","Components/App/App.js","index.js"],"names":["fetchedData","Welcome","className","src","to","ScoreBox","scores","lable","right","wrong","QuestionBox","props","onChangeValue","event","a","setState","selectedAnswer","target","value","handleSubmit","checkAnswer","state","submitAnswer","beenSubmitted","handleNextQuestion","cycleQuestion","resetBeenSubmitted","displayQuestions","questions","length","question","onChange","questionBank","map","classname","type","checked","name","readonly","onClick","disabled","hidden","correct","this","Component","GameView","gameState","App","setData","spoofData","componentDidMount","currentQuestions","shift","userAnswer","arrayShuffle","array","i","copy","n","Math","floor","random","push","spoofedData","randomNum","Number","setNum","toFixed","copiedData","incorrect","splice","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37b496d9.chunk.js","sourcesContent":["//This file was created in order to show an understanding of how to\n//import/export a file into the APP file and use the fetched data.\n//Normally I would use an Async/Await which would look something like below.\n\n// export const fetchedData = async () => {\n//   try {\n//     let response = await fetch('URL to Fetch From')\n//     let data = await response.json()\n//     return data\n//   }\n//   catch(error) {\n//     console.error(error);\n//   }\n// }\n\nexport const fetchedData = [\n  {\n    \"question\": \"What was Tandem previous name?\",\n    \"incorrect\": [\"Tandem\", \"Burger Shack\", \"Extraordinary Humans\"],\n    \"correct\": \"Devmynd\"\n  },\n  {\n    \"question\": \"In Shakespeare's play Julius Caesar, Caesar's last words were...\",\n    \"incorrect\": [\"Iacta alea est!\", \"Vidi, vini, vici\", \"Aegri somnia vana\"],\n    \"correct\": \"Et tu, Brute?\"\n  },\n  {\n    \"question\": \"A group of tigers are referred to as:\",\n    \"incorrect\": [\"Chowder\", \"Pride\", \"Destruction\"],\n    \"correct\": \"Ambush\"\n  },\n  {\n    \"question\": \"What is the top speed an average cat can travel?\",\n    \"incorrect\": [\"42 mph\", \"13 mph\", \"9 mph\"],\n    \"correct\": \"31 mph\"\n  },\n  {\n    \"question\": \"A cat can jump to _____ times its own height:\",\n    \"incorrect\": [\"3\", \"9\", \"7\"],\n    \"correct\": \"5\"\n  },\n  {\n    \"question\": \"What is the only letter that doesn't appear in a US state name?\",\n    \"incorrect\": [\"M\", \"Z\", \"X\"],\n    \"correct\": \"Q\"\n  },\n  {\n    \"question\": \"What is the name for a cow-bison hybrid?\",\n    \"incorrect\": [\"Cowson\", \"Bicow\", \"Mooson\"],\n    \"correct\": \"Beefalo\"\n  },\n  {\n    \"question\": \"What is the largest freshwater lake in the world?\",\n    \"incorrect\": [\"Lake Baikal\", \"Lake Michigan\", \"Lake Victoria\"],\n    \"correct\": \"Lake Superior\"\n  },\n\n  {\n    \"question\": \"In a website address bar, what does WWW stand for?\",\n    \"incorrect\": [\"Wild Wild West\", \"War World Web\"],\n    \"correct\": \"World Wide Web\"\n  },\n  {\n    \"question\": \"In a game of bingo, what number is represented by the name two little ducks?\",\n    \"incorrect\": [\"20\", \"55\", \"77\"],\n    \"correct\": \"22\"\n  },\n  {\n    \"question\": \"According to Greek mythology, who was the first woman on Earth?\",\n    \"incorrect\": [\"Lilith\", \"Eve\", \"Hera\"],\n    \"correct\": \"Pandora\"\n  },\n  {\n    \"question\": \"In which European city would you find Orly airport?\",\n    \"incorrect\": [\"London\", \"Belgium\", \"Munich\"],\n    \"correct\": \"Paris\"\n  },\n  {\n    \"question\": \"Where would you find the Sea of Tranquility?\",\n    \"incorrect\": [\"California\", \"Siberia\", \"China\"],\n    \"correct\": \"The Moon\"\n  },\n  {\n    \"question\": \"Which artist painted 'Girl with a Pearl Earrin'?\",\n    \"incorrect\": [\"Van Gogh\", \"Picasso\", \"Da Vinci\"],\n    \"correct\": \"Vermeer\"\n  },\n  {\n    \"question\": \"What is the official name for the 'hashtag' symbol?\",\n    \"incorrect\": [\"Number sign\", \"Hash Sign\", \"Pound\"],\n    \"correct\": \"Octothorpe\"\n  },\n  {\n    \"question\": \"Not American at all, where is apple pie from?\",\n    \"incorrect\": [\"Japan\", \"Ethiopia\", \"Canada\"],\n    \"correct\": \"England\"\n  },\n  {\n    \"question\": \"What is the national animal of Scotland?\",\n    \"incorrect\": [\"Bear\", \"Rabbit\", \"Seal\"],\n    \"correct\": \"Unicorn\"\n  },\n  {\n    \"question\": \"Where in the world is the only place where Canada is *due south*\",\n    \"incorrect\": [\"Alaska\", \"Russia\", \"Washington\"],\n    \"correct\": \"Detroit\"\n  },\n  {\n    \"question\": \"Approximately how many grapes go into a bottle of wine?\",\n    \"incorrect\": [\"500\", \"200\", \"1000\"],\n    \"correct\": \"700\"\n  },\n  {\n    \"question\": \"How much does a US One Dollar Bill cost to make?\",\n    \"incorrect\": [\"$0.25\", \"$1\", \"$5\"],\n    \"correct\": \"$0.05\"\n  },\n  {\n    \"question\": \"The Vatican bank has the only ATM in the world that allows users to do what?\",\n    \"incorrect\": [\n      \"Receive withdrawls in rosary beads\",\n      \"Vote for the Pope\",\n      \"Purchase indulgences\"\n    ],\n    \"correct\": \"Perform transactions in Latin\"\n  }\n]\n","import React from 'react';\nimport './welcome.css';\nimport { Link } from 'react-router-dom';\n\nconst Welcome = () => {\n  return (\n    <div className='welcome-container'>\n      <p className='title'>Pop Quiz</p>\n      <img className='title-img' src={'https://images.unsplash.com/photo-1599508704512-2f19efd1e35f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80'}/>\n      <Link to ='/Pop-Quiz/pop-quiz'>\n        <button className='start-btn'>Start</button>\n      </Link>\n    </div>\n  )\n}\n\nexport default Welcome;\n","import React from 'react';\nimport './ScoreBox.css';\n\nconst ScoreBox = ({ scores }) => {\n  return (\n    <div className='scoreBox-container'>\n    <p lable='title' className='game-title'>Pop Quiz</p>\n      <div className='answer-count-box'>\n        <p className='answer-count'>Right</p>\n        <p className='answer-number'>{scores.right}</p>\n        <p className='answer-count'>Wrong</p>\n        <p className='answer-number'>{scores.wrong}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ScoreBox;\n","import React, { Component } from 'react';\nimport './QuestionBox.css';\n\nclass QuestionBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAnswer: null,\n      beenSubmitted: true\n    }\n  }\n\n  onChangeValue = async (event) => {\n    await this.setState({\n      selectedAnswer: event.target.value\n    })\n  }\n\n  handleSubmit = () => {\n    this.props.checkAnswer(this.state.selectedAnswer)\n    this.props.submitAnswer()\n    this.setState({\n      beenSubmitted: false\n    })\n  }\n\n  handleNextQuestion = () => {\n    this.props.cycleQuestion()\n    this.props.resetBeenSubmitted()\n    this.setState({\n      selectedAnswer: null,\n      beenSubmitted: true\n    })\n  }\n\n  displayQuestions = () => {\n    if(this.props.questions && this.props.questions.length > 11) {\n      return (\n        <div className='head-question-box'>\n          <p lable='question' className='questionText'>{this.props.questions[0].question}</p>\n          <div onChange={this.onChangeValue} className='question-bank'>\n          {this.props.questions[0].questionBank && this.props.questions[0].questionBank.map(question => {\n            return (\n              <div classname=''>\n                <input type=\"radio\" checked={this.state.selectedAnswer === question ? true : false} className='answerText' value={question} name=\"ans\" readonly/> {question}\n              </div>\n            )\n          })}\n          </div>\n          <div className='button-box'>\n            <button className='submit-btn' onClick={() => this.handleSubmit()} disabled={this.props.beenSubmitted}>Submit Answer</button>\n            <button className='next-btn' onClick={this.handleNextQuestion} disabled={!this.props.beenSubmitted}>Next Question</button>\n          </div>\n          <p hidden={this.state.beenSubmitted}>The correct answer is {this.props.questions[0].correct}</p>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <p className='questionText'>You got {this.props.right} out of 10 correct!</p>\n          <p className='questionText'>Thank You For Playing</p>\n        </div>\n      )\n    }\n  }\n\n  render () {\n    return (\n    <div className='question-container'>\n      {this.displayQuestions()}\n    </div>\n    )\n  }\n}\n\nexport default QuestionBox;\n","import React from 'react';\nimport ScoreBox from '../ScoreBox/ScoreBox';\nimport QuestionBox from '../QuestionBox/QuestionBox'\nimport './GameView.css';\n\nconst GameView = ({ gameState, checkAnswer, submitAnswer, cycleQuestion, resetBeenSubmitted }) => {\n  return (\n    <div className='GameView-container'>\n      <ScoreBox scores={gameState} />\n      <QuestionBox checkAnswer={checkAnswer} right={gameState.right} questions={gameState.questions} cycleQuestion={cycleQuestion} resetBeenSubmitted={resetBeenSubmitted} submitAnswer={submitAnswer} beenSubmitted={gameState.beenSubmitted}/>\n    </div>\n  )\n}\n\nexport default GameView;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { fetchedData } from '../../apiRequestFake'\n\nimport './App.css';\nimport Welcome from '../WelcomePage/Welcome';\nimport GameView from '../GameView/GameView';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      right: 0,\n      wrong: 0,\n      questions: null,\n      beenSubmitted: false\n    }\n  }\n\n  setData = async () => {\n    await this.setState({\n      questions: fetchedData\n    })\n    await this.spoofData();\n  }\n\n  componentDidMount = async () => {\n    await this.setState({\n      questions: fetchedData\n    })\n    await this.spoofData();\n  }\n\n  cycleQuestion = () => {\n    let currentQuestions = this.state.questions\n    currentQuestions.shift()\n    this.setState({\n      questions: currentQuestions\n    })\n  }\n\n  resetBeenSubmitted = () => {\n    this.setState({\n       beenSubmitted: false\n    })\n  }\n\n  checkAnswer = (userAnswer) => {\n    if(userAnswer === this.state.questions[0].correct) {\n      this.setState({\n        right: this.state.right + 1\n      })\n    } else {\n      this.setState({\n        wrong: this.state.wrong + 1\n      })\n    }\n  }\n\n  submitAnswer = () => {\n    this.setState({\n      beenSubmitted: true\n    })\n  }\n\n  //Fisher–Yates Shuffle (not original code)//\n  arrayShuffle = (array) => {\n    var copy = [], n = array.length, i;\n    while (n) {\n      i = Math.floor(Math.random() * array.length);\n      if (i in array) {\n        copy.push(array[i]);\n        delete array[i];\n        n--;\n      }\n    }\n    return copy;\n  };\n\n  spoofData = () => {\n    let spoofedData = this.state.questions.map(question => {\n      const randomNum = Number((Math.random() * 3))\n      const setNum = Number(randomNum.toFixed())\n      const copiedData = [...question.incorrect]\n      question = {...question, questionBank : copiedData}\n      question.questionBank.splice(setNum, 0, question.correct)\n      return question\n    })\n    this.setState({\n      questions: this.arrayShuffle(spoofedData)\n    })\n  };\n\n  render() {\n    return (\n      <div className= \"App\" >\n        <Switch>\n          <Route exact path='/Pop-Quiz/'>\n            <Welcome />\n          </Route>\n          <Route exact path='/Pop-Quiz/pop-quiz'>\n            <GameView checkAnswer={this.checkAnswer} submitAnswer={this.submitAnswer} cycleQuestion={this.cycleQuestion} resetBeenSubmitted={this.resetBeenSubmitted} gameState={this.state}/>\n          </Route>\n        </Switch>\n      </div>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}